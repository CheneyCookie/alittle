--------------day22--------------
OOAD
	OO:面向对象
	OOA:面向对象分析
	OOD:面向对象设计
	OOP:面向对象编程


OOA:
	1.建立针对业务问题域的清晰视图
	2.列出系统必须要完成的核心任务
	3.针对问题域建立公共词汇表
	4.列出针对此问题域的最佳解决方案

OO(面向对象)的特点
	封装：隐藏属性信息，提供访问方式
		好处：提高安全性
		      提高代码复用性

	接口回调
	硬编码

	继承：
		extends:提高了代码的扩展性
		单继承

	多态：同一领域的不同对象调用相同的方法表现不同
	同一领域：继承同一个类或者实现同一个接口
	相同的方法：方法的重写
	体现：父类类型的引用指向子类对象

抽象：忽略事务的具体细节，只关注想要关注的地方
对象的分类：
	域对象：保存数据
	行为对象：方法

	类(对象之间的关系)：
		继承关系：is a
		依赖关系：体现为局部变量
		关联关系：体现为成员变量
			聚合关系(has a)：人和电脑
			组合关系(contains a)：人和头部
--------------day22--------------
设计模式
--------------day23--------------
设计模式：掌握工厂、单例、访问者、观察者、代理
--------------day24--------------
xml 可扩展的标记语言
	xml的基本语法
		标记语言<></>
	xml的验证
	xml的解析
--------------day24--------------
xml的验证
--------------day25--------------
xml的解析
--------------day26--------------
Oracle
--------------day27--------------
--------------day28--------------
--------------day29--------------
